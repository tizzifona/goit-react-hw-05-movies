{"version":3,"file":"static/js/879.d2bf1c07.chunk.js","mappings":"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","sources":["components/API/API.js","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["const API_KEY = '4f3b16f8367209c446bd09682fa8b6ff';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const searchMoviesByKeyword = async (keyword) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/search/movie?api_key=${API_KEY}&query=${keyword}`);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    return [];\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"Movies_moviesContainer__D1+tn\",\"moviesTitle\":\"Movies_moviesTitle__DtwfS\",\"moviesInput\":\"Movies_moviesInput__6dswK\",\"searchForm\":\"Movies_searchForm__S-9T7\",\"searchBtn\":\"Movies_searchBtn__pm9qY\",\"pulse\":\"Movies_pulse__AUHpn\",\"buttonClick\":\"Movies_buttonClick__CbYFt\",\"searchImg\":\"Movies_searchImg__fGKAE\",\"moviesList\":\"Movies_moviesList__Un-WS\",\"moviesItem\":\"Movies_moviesItem__BPaMl\",\"moviesImg\":\"Movies_moviesImg__oCXNc\",\"moviesLink\":\"Movies_moviesLink__rgFnl\"};","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { searchMoviesByKeyword } from '../API/API';\nimport css from './Movies.module.css';\nimport Notiflix from 'notiflix';\nimport searchButton from '../images/icon-search.png';\nconst Movies = () => {\n  const [keyword, setKeyword] = useState('');\n  const [movies, setMovies] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      const movies = await searchMoviesByKeyword(keyword);\n      setMovies(movies);\n    };\n    searchMovies();\n  }, [keyword]);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n\n    if (!keyword) {\n      Notiflix.Notify.failure('Please enter something');\n    } else {\n      const searchResults = await searchMoviesByKeyword(keyword);\n      if (searchResults.length === 0) {\n        Notiflix.Notify.failure('Sorry, nothing was found!');\n      } else {\n        setMovies(searchResults);\n        navigate(`/movies?keyword=${keyword}`);\n      }\n    }\n  };\n\n  const truncateTitle = (title) => {\n    if (title.length > 25) {\n      return title.slice(0, 25) + '...';\n    }\n    return title;\n  };\n\n  return (\n    <div className={css.moviesContainer}>\n      <h1 className={css.moviesTitle}>Search Movies</h1>\n      <form className={css.searchForm} onSubmit={handleSearch}>\n        <input\n          className={css.moviesInput}\n          type=\"text\"\n          value={keyword}\n          onChange={(e) => setKeyword(e.target.value)}\n        />\n        <button className={css.searchBtn} type=\"submit\">\n          <img src={searchButton} alt=\"Search Button\" className={css.searchImg} />\n        </button>\n      </form>\n      <ul className={css.moviesList}>\n        {movies.map((movie) => (\n          <li className={css.moviesItem} key={movie.id}>\n            <a href={`/goit-react-hw-05-movies/movies/${movie.id}`} className={css.moviesLink}>\n              {truncateTitle(movie.title)}\n              {movie.poster_path && <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} className={css.moviesImg} />}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","API_BASE_URL","getTrendingMovies","fetch","response","json","data","results","console","error","searchMoviesByKeyword","keyword","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useState","setKeyword","movies","setMovies","navigate","useNavigate","useEffect","searchMovies","handleSearch","e","preventDefault","Notiflix","searchResults","length","className","css","onSubmit","type","value","onChange","target","src","alt","map","movie","href","id","title","slice","poster_path"],"sourceRoot":""}