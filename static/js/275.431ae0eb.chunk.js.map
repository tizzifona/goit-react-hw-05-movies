{"version":3,"file":"static/js/275.431ae0eb.chunk.js","mappings":"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","sources":["components/API/API.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = '4f3b16f8367209c446bd09682fa8b6ff';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const searchMoviesByKeyword = async (keyword) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/search/movie?api_key=${API_KEY}&query=${keyword}`);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    return [];\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"castTitle\":\"Cast_castTitle__eoJbw\",\"castList\":\"Cast_castList__ARoWn\",\"separator\":\"Cast_separator__gCnGf\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castItemName\":\"Cast_castItemName__J2zmW\",\"castItemText\":\"Cast_castItemText__7xYQk\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../API/API';\nimport css from './Cast.module.css';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const credits = await getMovieCredits(movieId);\n        setCast(credits);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div className={css.castContainer}>\n      <p className={css.separator}></p>\n      <h2 className={css.castTitle}>Cast</h2>\n\n      {cast.length ? (\n        <ul className={css.castList}>\n          {cast.map(actor => (\n            <li key={actor.id} className={css.castItem}>\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                />\n              ) : (\n                <img\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\n                  alt={`${actor.name} profile`}\n                />\n              )}\n              <div className={css.castItemInfo}>\n                <p className={css.castItemName}>{actor.name}</p>\n                <p className={css.castItemText}>Character: {actor.character}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any information about the cast yet.</p>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","API_BASE_URL","getTrendingMovies","fetch","response","json","data","results","console","error","searchMoviesByKeyword","keyword","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useParams","useState","setCast","useEffect","fetchCast","credits","log","className","css","length","map","actor","profile_path","src","alt","name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}