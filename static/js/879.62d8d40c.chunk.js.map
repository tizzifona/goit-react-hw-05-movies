{"version":3,"file":"static/js/879.62d8d40c.chunk.js","mappings":"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","sources":["components/API/API.js","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["const API_KEY = '4f3b16f8367209c446bd09682fa8b6ff';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const searchMoviesByKeyword = async (keyword) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/search/movie?api_key=${API_KEY}&query=${keyword}`);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    return [];\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"Movies_moviesContainer__D1+tn\",\"moviesTitle\":\"Movies_moviesTitle__DtwfS\",\"moviesInput\":\"Movies_moviesInput__6dswK\",\"searchForm\":\"Movies_searchForm__S-9T7\",\"searchBtn\":\"Movies_searchBtn__pm9qY\",\"pulse\":\"Movies_pulse__AUHpn\",\"buttonClick\":\"Movies_buttonClick__CbYFt\",\"searchImg\":\"Movies_searchImg__fGKAE\",\"moviesList\":\"Movies_moviesList__Un-WS\",\"moviesItem\":\"Movies_moviesItem__BPaMl\",\"moviesImg\":\"Movies_moviesImg__oCXNc\",\"moviesLink\":\"Movies_moviesLink__rgFnl\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport {  Link, useSearchParams } from 'react-router-dom';\nimport { searchMoviesByKeyword } from '../API/API';\nimport css from './Movies.module.css';\nimport Notiflix from 'notiflix';\nimport searchButton from '../images/icon-search.png';\n\nconst Movies = () => {\n  const [keyword, setKeyword] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSearchByKeyword = useCallback(async (searchKeyword) => {\n    if (!searchKeyword) {\n      return;\n    }\n\n    const searchResults = await searchMoviesByKeyword(searchKeyword);\n    if (searchResults.length === 0) {\n      Notiflix.Notify.failure('Sorry, nothing was found!');\n    } else {\n      setMovies(searchResults);\n      setSearchParams({ query: searchKeyword });\n      setKeyword('');\n    }\n  }, [setSearchParams]);\n\n  useEffect(() => {\n    const searchKeyword = searchParams.get('query') || '';\n    if (searchKeyword) {\n      handleSearchByKeyword(searchKeyword);\n    }\n  }, [searchParams, handleSearchByKeyword]);\n\n  const truncateTitle = (title) => {\n    if (title.length > 25) {\n      return title.slice(0, 25) + '...';\n    }\n    return title;\n  };\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    handleSearchByKeyword(keyword);\n  };\n\n  return (\n    <div className={css.moviesContainer}>\n      <h1 className={css.moviesTitle}>Search Movies</h1>\n      <form className={css.searchForm} onSubmit={handleSearch}>\n        <input\n          className={css.moviesInput}\n          type=\"text\"\n          value={keyword}\n          onChange={(e) => setKeyword(e.target.value)}\n        />\n        <button className={css.searchBtn} type=\"submit\">\n          <img src={searchButton} alt=\"Search Button\" className={css.searchImg} />\n        </button>\n      </form>\n      <ul className={css.moviesList}>\n        {movies.map((movie) => (\n          <li className={css.moviesItem} key={movie.id}>\n            <Link to={`/movies/${movie.id}`} className={css.moviesLink}>\n              {truncateTitle(movie.title)}\n              {movie.poster_path && (\n                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} className={css.moviesImg} />\n              )}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n\n\n\n\n\n\n"],"names":["API_KEY","API_BASE_URL","getTrendingMovies","fetch","response","json","data","results","console","error","searchMoviesByKeyword","keyword","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useState","setKeyword","movies","setMovies","useSearchParams","searchParams","setSearchParams","handleSearchByKeyword","useCallback","searchKeyword","searchResults","length","Notiflix","query","useEffect","get","handleSearch","e","preventDefault","className","css","onSubmit","type","value","onChange","target","src","alt","map","movie","to","id","title","slice","poster_path"],"sourceRoot":""}